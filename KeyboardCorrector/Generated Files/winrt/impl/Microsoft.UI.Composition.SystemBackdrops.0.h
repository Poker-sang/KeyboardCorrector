// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210806.1

#pragma once
#ifndef WINRT_Microsoft_UI_Composition_SystemBackdrops_0_H
#define WINRT_Microsoft_UI_Composition_SystemBackdrops_0_H
WINRT_EXPORT namespace winrt::Microsoft::UI
{
    struct WindowId;
}
WINRT_EXPORT namespace winrt::Windows::UI
{
    struct Color;
}
WINRT_EXPORT namespace winrt::Windows::UI::Composition
{
    struct CompositionTarget;
}
WINRT_EXPORT namespace winrt::Windows::UI::Core
{
    struct CoreWindow;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Composition::SystemBackdrops
{
    struct IDesktopAcrylicController;
    struct IDesktopAcrylicControllerStatics;
    struct IMicaController;
    struct IMicaControllerStatics;
    struct ISystemBackdropController;
    struct DesktopAcrylicController;
    struct MicaController;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicController>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicControllerStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaController>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaControllerStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Composition::SystemBackdrops::ISystemBackdropController>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Composition::SystemBackdrops::DesktopAcrylicController>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Composition::SystemBackdrops::MicaController>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Composition::SystemBackdrops::DesktopAcrylicController> = L"Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Composition::SystemBackdrops::MicaController> = L"Microsoft.UI.Composition.SystemBackdrops.MicaController";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicController> = L"Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicControllerStatics> = L"Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaController> = L"Microsoft.UI.Composition.SystemBackdrops.IMicaController";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaControllerStatics> = L"Microsoft.UI.Composition.SystemBackdrops.IMicaControllerStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Composition::SystemBackdrops::ISystemBackdropController> = L"Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController";
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicController>{ 0x7C20A6AF,0x8EB3,0x5F08,{ 0xBD,0xFC,0x6D,0x35,0xE3,0x5D,0xFE,0x45 } }; // 7C20A6AF-8EB3-5F08-BDFC-6D35E35DFE45
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicControllerStatics>{ 0xA9E8F790,0x79EF,0x5416,{ 0x9B,0x67,0x6B,0xCF,0xE8,0x67,0xC8,0xB7 } }; // A9E8F790-79EF-5416-9B67-6BCFE867C8B7
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaController>{ 0x2DE996A9,0x0A2A,0x5889,{ 0xA8,0x9C,0x1F,0x84,0x06,0x0A,0x8C,0xAB } }; // 2DE996A9-0A2A-5889-A89C-1F84060A8CAB
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaControllerStatics>{ 0x7D85D834,0xD514,0x5250,{ 0xB7,0xC4,0x0B,0x78,0x50,0xD1,0xEF,0xDC } }; // 7D85D834-D514-5250-B7C4-0B7850D1EFDC
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Composition::SystemBackdrops::ISystemBackdropController>{ 0x5632D76C,0x0B74,0x5B52,{ 0xAA,0x33,0x80,0x26,0x20,0x68,0xAE,0xB2 } }; // 5632D76C-0B74-5B52-AA33-80262068AEB2
    template <> struct default_interface<winrt::Microsoft::UI::Composition::SystemBackdrops::DesktopAcrylicController>{ using type = winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicController; };
    template <> struct default_interface<winrt::Microsoft::UI::Composition::SystemBackdrops::MicaController>{ using type = winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaController; };
    template <> struct abi<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicController>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_FallbackColor(struct struct_Windows_UI_Color*) noexcept = 0;
            virtual int32_t __stdcall put_FallbackColor(struct struct_Windows_UI_Color) noexcept = 0;
            virtual int32_t __stdcall get_LuminosityOpacity(float*) noexcept = 0;
            virtual int32_t __stdcall put_LuminosityOpacity(float) noexcept = 0;
            virtual int32_t __stdcall get_TintColor(struct struct_Windows_UI_Color*) noexcept = 0;
            virtual int32_t __stdcall put_TintColor(struct struct_Windows_UI_Color) noexcept = 0;
            virtual int32_t __stdcall get_TintOpacity(float*) noexcept = 0;
            virtual int32_t __stdcall put_TintOpacity(float) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicControllerStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall IsSupported(bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaController>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_FallbackColor(struct struct_Windows_UI_Color*) noexcept = 0;
            virtual int32_t __stdcall put_FallbackColor(struct struct_Windows_UI_Color) noexcept = 0;
            virtual int32_t __stdcall get_LuminosityOpacity(float*) noexcept = 0;
            virtual int32_t __stdcall put_LuminosityOpacity(float) noexcept = 0;
            virtual int32_t __stdcall get_TintColor(struct struct_Windows_UI_Color*) noexcept = 0;
            virtual int32_t __stdcall put_TintColor(struct struct_Windows_UI_Color) noexcept = 0;
            virtual int32_t __stdcall get_TintOpacity(float*) noexcept = 0;
            virtual int32_t __stdcall put_TintOpacity(float) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaControllerStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall IsSupported(bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Composition::SystemBackdrops::ISystemBackdropController>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall SetTargetWithWindowId(struct struct_Microsoft_UI_WindowId, void*, bool*) noexcept = 0;
            virtual int32_t __stdcall SetTargetWithCoreWindow(void*, void*, bool*) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController
    {
        [[nodiscard]] WINRT_IMPL_AUTO(winrt::Windows::UI::Color) FallbackColor() const;
        WINRT_IMPL_AUTO(void) FallbackColor(winrt::Windows::UI::Color const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(float) LuminosityOpacity() const;
        WINRT_IMPL_AUTO(void) LuminosityOpacity(float value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(winrt::Windows::UI::Color) TintColor() const;
        WINRT_IMPL_AUTO(void) TintColor(winrt::Windows::UI::Color const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(float) TintOpacity() const;
        WINRT_IMPL_AUTO(void) TintOpacity(float value) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicController>
    {
        template <typename D> using type = consume_Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicControllerStatics
    {
        WINRT_IMPL_AUTO(bool) IsSupported() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Composition::SystemBackdrops::IDesktopAcrylicControllerStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicControllerStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Composition_SystemBackdrops_IMicaController
    {
        [[nodiscard]] WINRT_IMPL_AUTO(winrt::Windows::UI::Color) FallbackColor() const;
        WINRT_IMPL_AUTO(void) FallbackColor(winrt::Windows::UI::Color const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(float) LuminosityOpacity() const;
        WINRT_IMPL_AUTO(void) LuminosityOpacity(float value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(winrt::Windows::UI::Color) TintColor() const;
        WINRT_IMPL_AUTO(void) TintColor(winrt::Windows::UI::Color const& value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(float) TintOpacity() const;
        WINRT_IMPL_AUTO(void) TintOpacity(float value) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaController>
    {
        template <typename D> using type = consume_Microsoft_UI_Composition_SystemBackdrops_IMicaController<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Composition_SystemBackdrops_IMicaControllerStatics
    {
        WINRT_IMPL_AUTO(bool) IsSupported() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Composition::SystemBackdrops::IMicaControllerStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Composition_SystemBackdrops_IMicaControllerStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController
    {
        WINRT_IMPL_AUTO(bool) SetTarget(winrt::Microsoft::UI::WindowId const& windowId, winrt::Windows::UI::Composition::CompositionTarget const& desktopWindowTarget) const;
        WINRT_IMPL_AUTO(bool) SetTarget(winrt::Windows::UI::Core::CoreWindow const& coreWindow, winrt::Windows::UI::Composition::CompositionTarget const& compositionTarget) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Composition::SystemBackdrops::ISystemBackdropController>
    {
        template <typename D> using type = consume_Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController<D>;
    };
}
#endif
