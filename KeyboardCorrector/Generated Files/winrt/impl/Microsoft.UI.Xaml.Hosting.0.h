// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210806.1

#pragma once
#ifndef WINRT_Microsoft_UI_Xaml_Hosting_0_H
#define WINRT_Microsoft_UI_Xaml_Hosting_0_H
WINRT_EXPORT namespace winrt::Microsoft::UI::Composition
{
    struct CompositionPropertySet;
    struct ICompositionAnimationBase;
    struct Visual;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml
{
    struct UIElement;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls
{
    struct ScrollViewer;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Hosting
{
    struct IElementCompositionPreview;
    struct IElementCompositionPreviewStatics;
    struct ElementCompositionPreview;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreview>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreviewStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Hosting::ElementCompositionPreview>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Hosting::ElementCompositionPreview> = L"Microsoft.UI.Xaml.Hosting.ElementCompositionPreview";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreview> = L"Microsoft.UI.Xaml.Hosting.IElementCompositionPreview";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreviewStatics> = L"Microsoft.UI.Xaml.Hosting.IElementCompositionPreviewStatics";
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreview>{ 0xC8AD1EF4,0xA93F,0x5A25,{ 0x85,0xBD,0x7C,0x49,0x8D,0x98,0x56,0xD3 } }; // C8AD1EF4-A93F-5A25-85BD-7C498D9856D3
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreviewStatics>{ 0x84DA5A6C,0x0CFA,0x532B,{ 0x9B,0x15,0xCC,0xD9,0x86,0x37,0x43,0x42 } }; // 84DA5A6C-0CFA-532B-9B15-CCD986374342
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Hosting::ElementCompositionPreview>{ using type = winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreview; };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreview>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreviewStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall GetElementVisual(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetElementChildVisual(void*, void**) noexcept = 0;
            virtual int32_t __stdcall SetElementChildVisual(void*, void*) noexcept = 0;
            virtual int32_t __stdcall GetScrollViewerManipulationPropertySet(void*, void**) noexcept = 0;
            virtual int32_t __stdcall SetImplicitShowAnimation(void*, void*) noexcept = 0;
            virtual int32_t __stdcall SetImplicitHideAnimation(void*, void*) noexcept = 0;
            virtual int32_t __stdcall SetIsTranslationEnabled(void*, bool) noexcept = 0;
            virtual int32_t __stdcall GetPointerPositionPropertySet(void*, void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Hosting_IElementCompositionPreview
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreview>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Hosting_IElementCompositionPreview<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Hosting_IElementCompositionPreviewStatics
    {
        WINRT_IMPL_AUTO(winrt::Microsoft::UI::Composition::Visual) GetElementVisual(winrt::Microsoft::UI::Xaml::UIElement const& element) const;
        WINRT_IMPL_AUTO(winrt::Microsoft::UI::Composition::Visual) GetElementChildVisual(winrt::Microsoft::UI::Xaml::UIElement const& element) const;
        WINRT_IMPL_AUTO(void) SetElementChildVisual(winrt::Microsoft::UI::Xaml::UIElement const& element, winrt::Microsoft::UI::Composition::Visual const& visual) const;
        WINRT_IMPL_AUTO(winrt::Microsoft::UI::Composition::CompositionPropertySet) GetScrollViewerManipulationPropertySet(winrt::Microsoft::UI::Xaml::Controls::ScrollViewer const& scrollViewer) const;
        WINRT_IMPL_AUTO(void) SetImplicitShowAnimation(winrt::Microsoft::UI::Xaml::UIElement const& element, winrt::Microsoft::UI::Composition::ICompositionAnimationBase const& animation) const;
        WINRT_IMPL_AUTO(void) SetImplicitHideAnimation(winrt::Microsoft::UI::Xaml::UIElement const& element, winrt::Microsoft::UI::Composition::ICompositionAnimationBase const& animation) const;
        WINRT_IMPL_AUTO(void) SetIsTranslationEnabled(winrt::Microsoft::UI::Xaml::UIElement const& element, bool value) const;
        WINRT_IMPL_AUTO(winrt::Microsoft::UI::Composition::CompositionPropertySet) GetPointerPositionPropertySet(winrt::Microsoft::UI::Xaml::UIElement const& targetElement) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Hosting::IElementCompositionPreviewStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Hosting_IElementCompositionPreviewStatics<D>;
    };
}
#endif
